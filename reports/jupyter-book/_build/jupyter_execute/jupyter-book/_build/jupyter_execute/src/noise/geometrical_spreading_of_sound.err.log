Traceback (most recent call last):
  File "/home/frederikwr/anaconda3/envs/WindBro/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/frederikwr/anaconda3/envs/WindBro/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/frederikwr/anaconda3/envs/WindBro/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/frederikwr/anaconda3/envs/WindBro/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/frederikwr/anaconda3/envs/WindBro/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/frederikwr/anaconda3/envs/WindBro/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/frederikwr/anaconda3/envs/WindBro/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/frederikwr/anaconda3/envs/WindBro/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation, PillowWriter
from IPython.display import HTML, display, Image

# Constants
width = 3000  # Width of the simulation grid
height = width  # Height of the simulation grid
center_x =0 # # X-coordinate of the point source
center_y = 0 #  # Y-coordinate of the point source
frequency = 0.5 # frequency
amplitude = 100  # Amplitude of the oscillation
speed = 300  # Speed of wave propagation
duration = 3 # Duration of the simulation
fps = 10  # Frames per second
res = 500
wavelength = speed / frequency
angular_frequency = 2 * np.pi * frequency
wave_number = 2 * np.pi / wavelength

x, y = np.meshgrid(np.linspace(-width, width, res), np.linspace(-height, height, res))

fig,ax = plt.subplots()
time = 0 / fps
distance = np.sqrt((x - center_x)**2 + (y - center_y)**2)
wave = np.abs(np.maximum(0, (amplitude - 20*np.log10(distance) - 11)) * np.sin(angular_frequency * time - wave_number * distance))
cb = ax.imshow(wave, cmap='jet', origin='lower', extent=[-width, width, -height, height], vmin=0, vmax=amplitude)
plt.colorbar(cb, ax= ax, label = "SPL [dB]")
ax.set(xlabel= " X [m]",
       ylabel = "Y [m]")
plt.close()
def update(frame):
    global grid
    time = frame / fps
    distance = np.sqrt((x - center_x)**2 + (y - center_y)**2)
    wave = np.abs(np.maximum(0,(amplitude - 20*np.log10(distance) - 11)) * np.sin(angular_frequency * time - wave_number* distance))
    ax.imshow(wave, cmap='jet', origin='lower', extent=[-width, width, -height, height], vmin=0, vmax=amplitude)
animation = FuncAnimation(fig, update, frames= int(duration * fps), interval= 1/fps)

animation.save('../temp/ripple.gif',writer=PillowWriter(fps=fps))
Image(open('../temp/ripple.gif','rb').read())
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[1], line 40[0m
[1;32m     37[0m     ax[38;5;241m.[39mimshow(wave, cmap[38;5;241m=[39m[38;5;124m'[39m[38;5;124mjet[39m[38;5;124m'[39m, origin[38;5;241m=[39m[38;5;124m'[39m[38;5;124mlower[39m[38;5;124m'[39m, extent[38;5;241m=[39m[[38;5;241m-[39mwidth, width, [38;5;241m-[39mheight, height], vmin[38;5;241m=[39m[38;5;241m0[39m, vmax[38;5;241m=[39mamplitude)
[1;32m     38[0m animation [38;5;241m=[39m FuncAnimation(fig, update, frames[38;5;241m=[39m [38;5;28mint[39m(duration [38;5;241m*[39m fps), interval[38;5;241m=[39m [38;5;241m1[39m[38;5;241m/[39mfps)
[0;32m---> 40[0m animation[38;5;241m.[39msave([38;5;124m'[39m[38;5;124m../temp/ripple.gif[39m[38;5;124m'[39m,writer[38;5;241m=[39mPillowWriter(fps[38;5;241m=[39mfps))
[1;32m     41[0m Image([38;5;28mopen[39m([38;5;124m'[39m[38;5;124m../temp/ripple.gif[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mrb[39m[38;5;124m'[39m)[38;5;241m.[39mread())

File [0;32m~/anaconda3/envs/WindBro/lib/python3.11/site-packages/matplotlib/animation.py:1085[0m, in [0;36mAnimation.save[0;34m(self, filename, writer, fps, dpi, codec, bitrate, extra_args, metadata, extra_anim, savefig_kwargs, progress_callback)[0m
[1;32m   1081[0m savefig_kwargs[[38;5;124m'[39m[38;5;124mtransparent[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;28;01mFalse[39;00m   [38;5;66;03m# just to be safe![39;00m
[1;32m   1082[0m [38;5;66;03m# canvas._is_saving = True makes the draw_event animation-starting[39;00m
[1;32m   1083[0m [38;5;66;03m# callback a no-op; canvas.manager = None prevents resizing the GUI[39;00m
[1;32m   1084[0m [38;5;66;03m# widget (both are likewise done in savefig()).[39;00m
[0;32m-> 1085[0m [38;5;28;01mwith[39;00m mpl[38;5;241m.[39mrc_context({[38;5;124m'[39m[38;5;124msavefig.bbox[39m[38;5;124m'[39m: [38;5;28;01mNone[39;00m}), \
[1;32m   1086[0m      writer[38;5;241m.[39msaving([38;5;28mself[39m[38;5;241m.[39m_fig, filename, dpi), \
[1;32m   1087[0m      cbook[38;5;241m.[39m_setattr_cm([38;5;28mself[39m[38;5;241m.[39m_fig[38;5;241m.[39mcanvas,
[1;32m   1088[0m                        _is_saving[38;5;241m=[39m[38;5;28;01mTrue[39;00m, manager[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m   1089[0m     [38;5;28;01mfor[39;00m anim [38;5;129;01min[39;00m all_anim:
[1;32m   1090[0m         anim[38;5;241m.[39m_init_draw()  [38;5;66;03m# Clear the initial frame[39;00m

File [0;32m~/anaconda3/envs/WindBro/lib/python3.11/contextlib.py:137[0m, in [0;36m_GeneratorContextManager.__enter__[0;34m(self)[0m
[1;32m    135[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39margs, [38;5;28mself[39m[38;5;241m.[39mkwds, [38;5;28mself[39m[38;5;241m.[39mfunc
[1;32m    136[0m [38;5;28;01mtry[39;00m:
[0;32m--> 137[0m     [38;5;28;01mreturn[39;00m [38;5;28mnext[39m([38;5;28mself[39m[38;5;241m.[39mgen)
[1;32m    138[0m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m:
[1;32m    139[0m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([38;5;124m"[39m[38;5;124mgenerator didn[39m[38;5;124m'[39m[38;5;124mt yield[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;28;01mNone[39;00m

File [0;32m~/anaconda3/envs/WindBro/lib/python3.11/site-packages/matplotlib/animation.py:231[0m, in [0;36mAbstractMovieWriter.saving[0;34m(self, fig, outfile, dpi, *args, **kwargs)[0m
[1;32m    225[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    226[0m [38;5;124;03mContext manager to facilitate writing the movie file.[39;00m
[1;32m    227[0m 
[1;32m    228[0m [38;5;124;03m``*args, **kw`` are any parameters that should be passed to `setup`.[39;00m
[1;32m    229[0m [38;5;124;03m"""[39;00m
[1;32m    230[0m [38;5;66;03m# This particular sequence is what contextlib.contextmanager wants[39;00m
[0;32m--> 231[0m [38;5;28mself[39m[38;5;241m.[39msetup(fig, outfile, dpi, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    232[0m [38;5;28;01mtry[39;00m:
[1;32m    233[0m     [38;5;28;01myield[39;00m [38;5;28mself[39m

File [0;32m~/anaconda3/envs/WindBro/lib/python3.11/site-packages/matplotlib/animation.py:490[0m, in [0;36mPillowWriter.setup[0;34m(self, fig, outfile, dpi)[0m
[1;32m    489[0m [38;5;28;01mdef[39;00m [38;5;21msetup[39m([38;5;28mself[39m, fig, outfile, dpi[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[0;32m--> 490[0m     [38;5;28msuper[39m()[38;5;241m.[39msetup(fig, outfile, dpi[38;5;241m=[39mdpi)
[1;32m    491[0m     [38;5;28mself[39m[38;5;241m.[39m_frames [38;5;241m=[39m []

File [0;32m~/anaconda3/envs/WindBro/lib/python3.11/site-packages/matplotlib/animation.py:197[0m, in [0;36mAbstractMovieWriter.setup[0;34m(self, fig, outfile, dpi)[0m
[1;32m    183[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    184[0m [38;5;124;03mSetup for writing the movie file.[39;00m
[1;32m    185[0m 
[0;32m   (...)[0m
[1;32m    194[0m [38;5;124;03m    in pixels of the resulting movie file.[39;00m
[1;32m    195[0m [38;5;124;03m"""[39;00m
[1;32m    196[0m [38;5;66;03m# Check that path is valid[39;00m
[0;32m--> 197[0m Path(outfile)[38;5;241m.[39mparent[38;5;241m.[39mresolve(strict[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m    198[0m [38;5;28mself[39m[38;5;241m.[39moutfile [38;5;241m=[39m outfile
[1;32m    199[0m [38;5;28mself[39m[38;5;241m.[39mfig [38;5;241m=[39m fig

File [0;32m~/anaconda3/envs/WindBro/lib/python3.11/pathlib.py:993[0m, in [0;36mPath.resolve[0;34m(self, strict)[0m
[1;32m    990[0m         [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([38;5;124m"[39m[38;5;124mSymlink loop from [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m [38;5;241m%[39m e[38;5;241m.[39mfilename)
[1;32m    992[0m [38;5;28;01mtry[39;00m:
[0;32m--> 993[0m     s [38;5;241m=[39m os[38;5;241m.[39mpath[38;5;241m.[39mrealpath([38;5;28mself[39m, strict[38;5;241m=[39mstrict)
[1;32m    994[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m e:
[1;32m    995[0m     check_eloop(e)

File [0;32m<frozen posixpath>:416[0m, in [0;36mrealpath[0;34m(filename, strict)[0m

File [0;32m<frozen posixpath>:451[0m, in [0;36m_joinrealpath[0;34m(path, rest, strict, seen)[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '../temp'
FileNotFoundError: [Errno 2] No such file or directory: '../temp'

